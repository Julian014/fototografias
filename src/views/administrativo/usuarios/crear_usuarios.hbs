<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HIDRAULIBOMBAS</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<style>
/* Root colors */
:root {
    --primary-color: #0769B3;
    --secondary-color: #1f335c;
    --accent-color: #047885;
    --text-color: #333;
    --background-color: #f4f4f9;
    --button-hover: #035b94;
}

/* Global Styles */
body {
    font-family: 'Inter', sans-serif;
    background-color: var(--background-color);
    margin: 0;
    justify-content: center;
    align-items: center;
    height: 100vh;
    overflow: hidden;
}

/* Form Container */
.form-container {
    background-color: #fff;
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    width: 95%;
    transition: transform 0.3s ease;
}

.form-container:hover {
    transform: scale(1.02);
}

/* Form Group */
.form-group {
    margin-bottom: 1.2rem;
}

/* Form Labels */
.form-group label {
    font-weight: 600;
    font-size: 0.9rem;
    color: var(--text-color);
    margin-bottom: 0.5rem;
    display: block;
}

/* Input Fields */
.form-input {
    width: 100%;
    padding: 0.8rem;
    font-size: 1rem;
    color: var(--text-color);
    border: 1px solid var(--primary-color);
    border-radius: 5px;
    transition: border-color 0.3s ease;
}

.form-input:focus {
    outline: none;
    border-color: var(--accent-color);
    box-shadow: 0 0 6px rgba(4, 120, 133, 0.4);
}

/* Submit Button */
.form-button {
    background-color: var(--primary-color);
    color: #fff;
    padding: 0.8rem;
    font-size: 1rem;
    border: none;
    border-radius: 5px;
    width: 100%;
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-weight: 600;
}

.form-button:hover {
    background-color: var(--button-hover);
}

/* Responsive Design */
@media (max-width: 480px) {
    .form-container {
        padding: 1.5rem;
    }

    .form-button {
        padding: 0.7rem;
    }
}
</style>

<body>
<form action="/agregar_usuario" method="POST" enctype="multipart/form-data" class="form-container">
    <div class="form-group">
        <label for="nombre">Nombre:</label>
        <input type="text" id="nombre" name="nombre" class="form-input" required>
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" class="form-input" required>
    </div>
    <div class="form-group">
        <label for="password">Contraseña:</label>
        <input type="password" id="password" name="password" class="form-input" required>
    </div>
    <div class="form-group">
        <label for="role">Rol:</label>
        <select id="role" name="role" class="form-input" required>
            <option value="admin">ADMINISTRADOR</option>
            <option value="tecnico">TECNICO</option>
        </select>
    </div>

<div class="form-group">
    <label for="firma">Firma:</label>
    <canvas id="firmaCanvas" width="300" height="150" style="border:1px solid var(--primary-color);"></canvas>
    <button type="button" id="limpiarFirma" class="form-button" style="margin-top: 10px;">Limpiar Firma</button>
    <input type="hidden" id="firma" name="firma">
</div>


    <div class="form-group">
        <label for="foto">Foto:</label>
        <input type="file" id="foto" name="foto" class="form-input" accept="image/*" required>
    </div>
    <button type="submit" class="form-button">Agregar Usuario</button>
</form>

</body>
</html>
<script>
    const canvas = document.getElementById('firmaCanvas');
    const ctx = canvas.getContext('2d');
    const limpiarBtn = document.getElementById('limpiarFirma');
    const firmaInput = document.getElementById('firma');

    let isDrawing = false;

    // Ajustar eventos para iniciar y detener el dibujo
    canvas.addEventListener('mousedown', (event) => {
        isDrawing = true;
        ctx.beginPath(); // Inicia un nuevo camino
        ctx.moveTo(event.offsetX, event.offsetY); // Mover el "pincel" al punto inicial
    });

    canvas.addEventListener('mouseup', () => {
        isDrawing = false;
        ctx.closePath(); // Cierra el camino actual
    });

    canvas.addEventListener('mouseout', () => {
        isDrawing = false; // Detener el dibujo si el mouse sale del canvas
    });

    canvas.addEventListener('mousemove', (event) => {
        if (!isDrawing) return; // No hacer nada si no se está dibujando
        ctx.lineWidth = 2;
        ctx.lineCap = 'round';
        ctx.strokeStyle = '#000';

        ctx.lineTo(event.offsetX, event.offsetY);
        ctx.stroke();
    });

    // Botón para limpiar el canvas
    limpiarBtn.addEventListener('click', () => {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    });

    // Convertir la firma a base64 al enviar el formulario
    document.querySelector('form').addEventListener('submit', () => {
        const firmaDataURL = canvas.toDataURL('image/png'); // Convierte el dibujo a una imagen PNG
        firmaInput.value = firmaDataURL; // Almacena la imagen como cadena base64 en el campo oculto
    });
</script>

