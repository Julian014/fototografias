<!DOCTYPE html>
<html lang="en" class="light">
<head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <title>HIDRAULIBOMBAS</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet"/>
  <link rel="manifest" href="/manifest.json">

  <link rel="icon" href="/imagenes/Recurso 1.png" type="image/x-icon"/>

<style>
  /* Updated Sidebar Styling */
  .sidebar {
    width: 16rem;
    padding: 1rem;
    background-color: #1f335c; /* Dark background color */
    color: white;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    max-height: 100vh;
    overflow-y: auto;
    transition: transform 0.3s ease-in-out;
  }

  /* Sidebar Links Styling */
  .sidebar ul li a {
    font-size: 0.875rem;
    padding: 0.75rem 1rem;
    border-radius: 0.375rem;
    display: flex;
    align-items: center;
    transition: background-color 0.3s, color 0.3s;
    color: #d9d9d9;
  }

  .sidebar ul li a:hover {
    background-color: #047885; /* Secondary color */
    color: white;
    transform: translateX(5px);
  }

  .sidebar ul li a.active {
    background-color: #0769B3; /* Primary color */
    color: white;
  }

  /* Section Titles */
  .section-title {
    font-size: 0.75rem;
    font-weight: 600;
    color: #d9d9d9; /* Light gray for section titles */
    text-transform: uppercase;
    margin-top: 2rem;
    padding-left: 1rem;
  }

  /* Badge Styling */
  .badge {
    background-color: #ef4444;
    color: white;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    border-radius: 50%;
    margin-left: auto;
  }

  /* Search Bar */
  .search-bar {
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    background-color: #2d3748; /* Slightly darker than sidebar */
    border-radius: 0.375rem;
    padding: 0.5rem;
  }

  .search-bar input {
    border: none;
    background: none;
    outline: none;
    width: 100%;
    padding: 0.5rem;
    font-size: 0.875rem;
    color: #d9d9d9;
  }

  .search-bar i {
    color: #d9d9d9;
  }

  /* Hamburger Menu */
  .hamburger {
    display: none;
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 50;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 0.375rem;
    background-color: #0769B3; /* Primary color */
  }

  .hamburger span {
    display: block;
    width: 25px;
    height: 3px;
    background-color: white;
    margin-bottom: 5px;
  }

  @media (max-width: 768px) {
    .sidebar {
      position: fixed;
      top: 0;
      height: 100%;
      transform: translateX(-100%);
      z-index: 40;
    }

    .sidebar.open {
      transform: translateX(0);
    }

    .hamburger {
      display: block;
    }
  }

  /* Dark Mode Styles */
  .dark .sidebar {
    background-color: #1f335c;
    color: #d9d9d9;
  }

  .dark .sidebar ul li a {
    color: #d9d9d9;
  }

  .dark .sidebar ul li a:hover {
    background-color: #047885;
    color: white;
  }

  .dark .section-title {
    color: #a0aec0;
  }

  .dark .search-bar {
    background-color: #2d3748;
  }

  .dark .search-bar input {
    color: #d9d9d9;
  }

  .dark .hamburger {
    background-color: #2d3748;
  }
     @media (max-width: 1024px) {
  .sidebar {
    position: fixed;
    top: 0;
    height: 100%;
    transform: translateX(-100%);
    z-index: 40;
  }

  .sidebar.open {
    transform: translateX(0);
  }

  .hamburger {
    display: block;
  }
}
#user-name {
  font-size: 1rem;
  font-weight: 600;
  color: #white; /* O usa el color adecuado */
}
.dark #user-name {
  color: #e2e8f0; /* Ajuste para modo oscuro */
}

</style>

</head>
<div class="overlay" id="overlay"></div>

<body class="bg-gray-100 dark:bg-gray-900 transition-colors duration-300">
  <div class="flex h-screen">
    <!-- Hamburger Icon -->
    <div class="hamburger" id="hamburger-menu">
      <span></span>
      <span></span>
      <span></span>
    </div>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
      <!-- Profile Section -->
      <div class="profile-section">
        <div class="profile-info">
          <img  id="perfil" src="imagenes/logo_ingenieria.jpeg-removebg-preview.png" alt="Profile Picture" />
        </div>
      </div>




<div class="flex items-center justify-end space-x-4 p-4">
  <div id="user-name" class="text-gray-700 dark:text-gray-300 font-semibold">
    {{name}}
  </div>
  <div class="relative">
  <i class="fas fa-bell text-xl cursor-pointer" id="notificationBell" onclick="toggleNotificationPopup()"></i>
    <span id="notificationCount" class="badge hidden">0</span>
  </div>
</div>


      <!-- Search Bar -->
      <div class="search-bar">
        <input type="text" placeholder="Buscar...">
        <i class="fas fa-search"></i>
      </div>

      <!-- Navigation Links -->
      <nav>

        
        <ul>
          <!-- General Section -->
          <div class="section-title">General</div>
          <li class="mb-2">
  <a class="flex items-center" href="/menuAdministrativo" data-link="/menuAdministrativo" title="Vista General">
              <i class="fas fa-home mr-2"></i> Vista General
            </a>
          </li>



  <!-- Property Management Section -->
          <div class="section-title">--Usuarios--</div>
       
 <!-- edificios Section -->
<!-- Usuarios Section -->
<li class="mb-2">
  <a class="flex items-center justify-between cursor-pointer"  data-links="/agregar_usuarios,/menuOperativo,/menuFinanciero"  href="#" onclick="toggleSubmenu('submenu-Usuarios')">
    <i class="fas fa-user mr-2"></i> Usuarios
    <i class="fas fa-chevron-down"></i>
  </a>
  <ul id="submenu-Usuarios" class="hidden ml-4">
    <li class="mb-2">
      <a class="flex items-center" href="/agregar_usuario" title="Usuarios">
        <i class="fas fa-user-plus mr-2"></i> Agregar
      </a>
    </li>

    <li class="mb-2">
      <a class="flex items-center" href="/consultar_usuarios" title="Consultar Usuarios">
        <i class="fas fa-user-check mr-2"></i> Consultar
      </a>
    </li>
  </ul>
</li>











  <!-- Property Management Section -->
          <div class="section-title">--Clientes--</div>
       
 <!-- edificios Section -->
<!-- Usuarios Section -->
<li class="mb-2">
  <a class="flex items-center justify-between cursor-pointer"  data-links="/agregar_usuarios,/menuOperativo,/menuFinanciero"  href="#" onclick="toggleSubmenu('submenu-Clientes')">
    <i class="fas fa-user mr-2"></i> Clientes
    <i class="fas fa-chevron-down"></i>
  </a>
  <ul id="submenu-Clientes" class="hidden ml-4">
    <li class="mb-2">
      <a class="flex items-center" href="/agregar_clientes" title="Clientes">
        <i class="fas fa-user-plus mr-2"></i> Agregar
      </a>
    </li>

    <li class="mb-2">
      <a class="flex items-center" href="/consultar_clientes" title="Consultar Clientes">
        <i class="fas fa-user-check mr-2"></i> Consultar
      </a>
    </li>
  </ul>
</li>















<!-- Property Management Section -->
<div class="section-title">--iNFORME--</div>



<!-- Blog para Residentes Section -->
<li class="mb-2">
  <a class="flex items-center justify-between cursor-pointer" href="#" onclick="toggleSubmenu('submenu-Informe')">
    <i class="fas fa-bell mr-2"></i> Informes
    <i class="fas fa-chevron-down"></i>
  </a>
  <ul id="submenu-Informe" class="hidden ml-4">
    <li class="mb-2">
      <a class="flex items-center" href="/realizar_informe" title="Usar Plantilla">
        <i class="fas fa-file-alt mr-2"></i> Crear Informe
      </a>
    </li>
    <li class="mb-2">
      <a class="flex items-center" href="/Consulta_informes_realizados" title="Nueva Publicaci贸n">
        <i class="fas fa-eye mr-2"></i> Consultar Informes 
      </a>
    </li>
  </ul>
</li>


<!-- Property Management Section -->
<div class="section-title">--Alertas--</div>



<!-- Blog para Residentes Section -->
<li class="mb-2">
  <a class="flex items-center justify-between cursor-pointer" href="#" onclick="toggleSubmenu('submenu-ALERTA')">
    <i class="fas fa-bell mr-2"></i>  Alertas
    <i class="fas fa-chevron-down"></i>
  </a>
  <ul id="submenu-ALERTA" class="hidden ml-4">
    <li class="mb-2">
      <a class="flex items-center" href="/agregar_alertas" title="Usar Plantilla">
        <i class="fas fa-file-alt mr-2"></i> Crear alertas
      </a>
    </li>
    <li class="mb-2">
      <a class="flex items-center" href="/consultar_alertas" title="Nueva Publicaci贸n">
        <i class="fas fa-eye mr-2"></i> Consultar alertas
      </a>
    </li>
  </ul>
</li>






<!-- apartamentos Section -->
<li class="mb-2">
  <a class="flex items-center justify-between cursor-pointer" href="#" onclick="toggleSubmenu('submenu-apartamentos')"  data-links="/agregar_apartamento,/Consulta_apartamentos">
    <i class="fas fa-city mr-2"></i> Geolocalizaion
    <i class="fas fa-chevron-down"></i>
  </a>
  <ul id="submenu-apartamentos" class="hidden ml-4">
    <li class="mb-2">
      <a class="flex items-center" href="/geolocalizacion" title="Inmuebles">
        <i class="fas fa-folder-open mr-2"></i> consultar
      </a>
    </li>
  
  </ul>
</li>

      
<li class="mb-2">
  <a class="flex items-center" href="/logout" title="Cerrar sesi贸n">
    <i class="fas fa-sign-out-alt mr-2"></i> Cerrar sesi贸n 
  </a>
</li>

        </ul>
      </nav>
<br>

      <!-- Theme Toggle Button -->
      <div class="mt-auto">
        <button id="theme-toggle" class="w-full py-2 px-4 text-white bg-blue-500 hover:bg-blue-600 rounded-lg">
          Cambiar Tema
        </button>
      </div>
    </div>

    <!-- Main Content -->
    <div class="flex-1 p-6 bg-gray-50 dark:bg-gray-800 overflow-auto transition-colors duration-300">
      <!-- Placeholder for dynamic body content -->

   <div class="main-content">
    
<div id="notificationPopup" class="hidden fixed top-16 right-16 bg-white p-4 shadow-lg rounded-lg z-50 w-80">
    <h3 class="text-lg font-bold mb-2">Notificaciones</h3>
    <ul id="notificationList" class="text-gray-700 space-y-2"></ul>
<button onclick="markNotificationsAsRead(usuario_id)" class="mt-3 text-blue-500 w-full text-center py-2 rounded-lg bg-blue-100 hover:bg-blue-200">
  Marcar todas como le铆das
</button>


</div>

<audio id="notificationSound" src="alertas/level-up-2-199574.mp3" preload="auto"></audio>



    {{{body}}}
    
</div>

    </div>
  </div>




<script>
  const usuario_id = {{usuario_id}};
  console.log('ID del usuario:', usuario_id);

  // Ahora puedes usar `usuario_id` para lo que necesites en el frontend.
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.1/socket.io.min.js"></script>
<script>
  // Conexi贸n al servidor de Socket.IO




// Variable para almacenar el intervalo
let notificationInterval;

// Funci贸n para reproducir el sonido
function playNotificationSound() {
  const notificationSound = document.getElementById('notificationSound');
  notificationSound.play().catch(error => {
    console.error("Error al intentar reproducir el sonido:", error);
  });
}

// Funci贸n para iniciar la repetici贸n del sonido cada 7 segundos
function startNotificationSound() {
  // Reproducir el sonido de inmediato y luego cada 7 segundos
  playNotificationSound();
  notificationInterval = setInterval(playNotificationSound, 7000);  // 7000 ms = 7 segundos
}

// Funci贸n para detener el sonido
function stopNotificationSound() {
  clearInterval(notificationInterval);  // Detener el intervalo
}

// Funci贸n para obtener las notificaciones del backend
async function getNotifications() {
  try {
    const response = await fetch('/notifications');
    const data = await response.json();

    // Verificar si hay notificaciones no le铆das
    if (data.notificaciones.length > 0) {
      // Mostrar el contador de notificaciones
      document.getElementById('notificationCount').innerText = data.notificaciones.length;
      document.getElementById('notificationCount').classList.remove('hidden');

      // Mostrar las notificaciones en el popup
      const notificationList = document.getElementById('notificationList');
      notificationList.innerHTML = '';  // Limpiar lista de notificaciones
      data.notificaciones.forEach(notification => {
        const listItem = document.createElement('li');
        listItem.innerText = `Alerta ID: ${notification.alerta_id} - Tienes un mantenimiento pendiente.`;
        notificationList.appendChild(listItem);
      });

      // Iniciar el sonido solo si hay notificaciones pendientes
      startNotificationSound();
    } else {
      // Detener el sonido si no hay notificaciones pendientes
      stopNotificationSound();
    }
  } catch (error) {
    console.error('Error al obtener las notificaciones:', error);
  }
}

// Funci贸n para marcar las notificaciones como le铆das
async function markNotificationsAsRead(userId) {
  try {
    const response = await fetch(`/notifications/markAsRead/${userId}`, { method: 'POST' });

    if (response.ok) {
      // Detener el sonido cuando las notificaciones sean marcadas como le铆das
      stopNotificationSound();

      // Opcional: Actualizar el contador de notificaciones a 0
      document.getElementById('notificationCount').innerText = '0';
      document.getElementById('notificationCount').classList.add('hidden');
    } else {
      console.error('Error al marcar las notificaciones como le铆das.');
    }
  } catch (error) {
    console.error('Error al hacer la solicitud:', error);
  }
}

// Llamar a la funci贸n al cargar la p谩gina o cuando sea necesario
window.addEventListener('load', () => {
  // Aseg煤rate de que el sonido solo suene si hay notificaciones no le铆das
  getNotifications();
});

// Detectar la primera interacci贸n del usuario en la p谩gina para permitir el sonido
document.addEventListener('click', function() {
  // Asegurarse de que el sonido solo suene si hay notificaciones pendientes
  getNotifications();
}, { once: true });  // Asegura que el evento se dispare solo una vez







// Funci贸n para marcar todas las notificaciones como le铆das
async function markNotificationsAsRead(usuarioId) {
  try {
    const response = await fetch('/mark-notifications-read', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ usuario_id: usuarioId }),
    });

    const data = await response.json();
    
    if (response.ok) {
      console.log(data.message);  // Mensaje de 茅xito

      // Recargar la p谩gina despu茅s de marcar las notificaciones como le铆das
      location.reload();  // Recarga la p谩gina para actualizar el estado de las notificaciones
    } else {
      console.error('Error al marcar las notificaciones como le铆das:', data.error);
    }
  } catch (error) {
    console.error('Error al realizar la solicitud:', error);
  }
}






</script>
<script>

// Function to toggle the notification popup
function toggleNotificationPopup() {
    const popup = document.getElementById('notificationPopup');
    popup.classList.toggle('hidden'); // Solo mostrar o esconder el popup al hacer clic

    // Si el popup est谩 visible, agregamos un event listener para hacer clic fuera de 茅l
    if (!popup.classList.contains('hidden')) {
        document.addEventListener('click', closePopupOnClickOutside);
    } else {
        document.removeEventListener('click', closePopupOnClickOutside);
    }
}

// Function to close the popup when clicking outside
function closePopupOnClickOutside(event) {
    const popup = document.getElementById('notificationPopup');
    const bell = document.getElementById('notificationBell');
    
    // Verificar si el clic ocurri贸 fuera del popup y de la campana de notificaciones
    if (!popup.contains(event.target) && event.target !== bell) {
        popup.classList.add('hidden'); // Ocultar el popup
        document.removeEventListener('click', closePopupOnClickOutside); // Remover el listener
    }
}


// Hamburger menu toggle
const hamburger = document.getElementById('hamburger-menu');
const sidebar = document.getElementById('sidebar');

hamburger.addEventListener('click', () => {
    sidebar.classList.toggle('open');
});




// Theme toggle logic
const themeToggle = document.getElementById('theme-toggle');
const htmlElement = document.documentElement;

themeToggle.addEventListener('click', () => {
    htmlElement.classList.toggle('dark');
    if (htmlElement.classList.contains('dark')) {
        localStorage.setItem('theme', 'dark');
    } else {
        localStorage.setItem('theme', 'light');
    }
});

// Load theme from localStorage
const storedTheme = localStorage.getItem('theme');
if (storedTheme === 'dark') {
    htmlElement.classList.add('dark');
}

// Mark the active link in the sidebar
const currentPath = window.location.pathname;
const menuLinks = document.querySelectorAll('.sidebar ul li a');

menuLinks.forEach(link => {
    if (link.dataset.link === currentPath) {
        link.classList.add('active');
    }
});

// Submenu toggle
function toggleSubmenu(id) {
    const submenu = document.getElementById(id);
    submenu.classList.toggle('hidden');
}


</script>








<script>











</script>
<script>
  const nombre = "{{name}}";
</script>

